// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reservas.Infraestructura.EntityFramework.Contexts;

namespace Reservas.Infraestructura.EF.Migrations
{
    [DbContext(typeof(ReadDbContext))]
    partial class ReadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Reservas.Infraestructura.EntityFramework.ReadModel.ClienteReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NombreCompleto")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("nombreCompleto");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Reservas.Infraestructura.EntityFramework.ReadModel.FacturaReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<decimal>("Monto")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("monto");

                    b.Property<string>("NroFactura")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("nroFactura");

                    b.Property<Guid?>("ReservaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("Reservas.Infraestructura.EntityFramework.ReadModel.PagoReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodComprobante")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codComprobante");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<decimal>("Monto")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("monto");

                    b.Property<Guid?>("ReservaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("Reservas.Infraestructura.EntityFramework.ReadModel.ReservaReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodReserva")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codReserva");

                    b.Property<decimal>("Deuda")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("deuda");

                    b.Property<string>("EstadoReserva")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("estadoReserva");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<decimal>("Monto")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("monto");

                    b.Property<string>("TipoReserva")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("tipoReserva");

                    b.Property<Guid?>("VueloId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("VueloId");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("Reservas.Infraestructura.EntityFramework.ReadModel.VueloReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("Detalle")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("detalle");

                    b.Property<decimal>("PrecioPasaje")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("precioPasaje");

                    b.HasKey("Id");

                    b.ToTable("Vuelo");
                });

            modelBuilder.Entity("Reservas.Infraestructure.EntityFramework.ReadModel.ProductoReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("PrecioVenta")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("precioVenta");

                    b.Property<int>("StockActual")
                        .HasColumnType("int")
                        .HasColumnName("stockActual");

                    b.HasKey("Id");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Reservas.Infraestructura.EntityFramework.ReadModel.FacturaReadModel", b =>
                {
                    b.HasOne("Reservas.Infraestructura.EntityFramework.ReadModel.ReservaReadModel", "Reserva")
                        .WithMany()
                        .HasForeignKey("ReservaId");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Reservas.Infraestructura.EntityFramework.ReadModel.PagoReadModel", b =>
                {
                    b.HasOne("Reservas.Infraestructura.EntityFramework.ReadModel.ReservaReadModel", "Reserva")
                        .WithMany()
                        .HasForeignKey("ReservaId");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Reservas.Infraestructura.EntityFramework.ReadModel.ReservaReadModel", b =>
                {
                    b.HasOne("Reservas.Infraestructura.EntityFramework.ReadModel.ClienteReadModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("Reservas.Infraestructura.EntityFramework.ReadModel.VueloReadModel", "Vuelo")
                        .WithMany()
                        .HasForeignKey("VueloId");

                    b.Navigation("Cliente");

                    b.Navigation("Vuelo");
                });
#pragma warning restore 612, 618
        }
    }
}
